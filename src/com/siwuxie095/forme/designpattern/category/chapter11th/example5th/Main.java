package com.siwuxie095.forme.designpattern.category.chapter11th.example5th;

/**
 * @author Jiajing Li
 * @date 2019-11-09 17:05:20
 */
public class Main {

    /**
     * 代理模式
     *
     * 为另一个对象提供一个替身或占位符以控制对这个对象的访问。
     *
     *
     * 我们已经看到代理模式是如何为另一个对象提供替身的。我们也将代理描述成
     * 另一个对象的 "代表"。
     *
     * 但是代理控制访问怎么解释呢？这听起来有一点奇怪。别担心，在糖果机的例子
     * 中，代理控制了对远程对象的访问。代理之所以需要控制访问，是因为客户不知
     * 道如何和远程对象沟通。从某个方面来看，远程代理控制访问，好帮我们处理网
     * 络上的细节。代理模式有许多变体，而这些变体几乎都和 "控制访问" 的做法有
     * 关。
     *
     * 几种代理控制访问的方式：
     * （1）远程代理控制访问远程对象。
     * （2）虚拟代理控制访问创建开销大的资源。
     * （3）保护代理基于权限控制对资源对访问。
     *
     * 即 使用代理创建代表对象，让代表（representative）对象控制某对象的访
     * 问，被代理的对象可以是远程的对象、创建开销大的对象或需要安全控制的对象。
     *
     *
     * 远程代理和虚拟代理的比较：
     * （1）远程代理：
     * 远程代理可以作为另一个 JVM 上对象的本地代表。调用代理的方法，会被代理
     * 利用网络转发到远程执行，并且结果会通过网络返回给代理，再由代理将结果转
     * 给客户。
     * （2）虚拟代理：
     * 虚拟代理作为创建开销大的对象的代表。虚拟代理经常直到我们真正需要一个对
     * 象的时候才创建它。当对象在创建前和创建中时，由虚拟代理来扮演对象的替身。
     * 对象创建后，代理就会将请求直接委托给对象。
     */
    public static void main(String[] args) {
        Client client = new Client();
        client.request();
    }

}
