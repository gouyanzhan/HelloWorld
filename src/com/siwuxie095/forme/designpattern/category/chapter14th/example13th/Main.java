package com.siwuxie095.forme.designpattern.category.chapter14th.example13th;

/**
 * @author Jiajing Li
 * @date 2019-11-11 21:31:01
 */
public class Main {

    /**
     * 备忘录模式
     *
     * 让对象返回之前的状态。
     *
     *
     * 例如：你的用户请求 "撤销"。
     *
     * 备忘录模式有两个目标：
     * （1）储存系统关键对象的重要状态。
     * （2）维护关键对象的封装。
     *
     * 请不要忘记单一责任原则，不要把保持状态的工作和关键对象混在一起，
     * 这样比较好。这个专门掌握状态的对象，就称为备忘录。
     *
     * 现在有一款关卡式游戏，一旦失败，就必须重新开始。许多玩家开始强
     * 烈要求提供储存进度的功能。所以应该使用备忘录模式。
     *
     *
     * 备忘录的优点：
     * （1）将被储存的状态放在外面，不要和关键对象混在一起，这可以帮助
     * 维护内聚。
     * （2）保持关键对象的数据封装。
     * （3）提供了容易实现的恢复能力。
     *
     * 备忘录的用途和缺点：
     * （1）备忘录用于储存状态。
     * （2）使用备忘录的缺点：储存和恢复状态的过程可能相当耗时。
     * （3）在 Java 系统中，其实可以考虑使用序列化（serialization）
     * 机制储存系统的状态。
     *
     * PS：备忘录模式也被称为快照模式。
     */
    public static void main(String[] args) {
        Client client = new Client();
        client.play();
    }

}
