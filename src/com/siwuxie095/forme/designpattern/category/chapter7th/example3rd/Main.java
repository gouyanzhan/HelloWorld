package com.siwuxie095.forme.designpattern.category.chapter7th.example3rd;

import java.util.Enumeration;

/**
 * @author Jiajing Li
 * @date 2019-11-04 16:54:27
 */
public class Main {

    /**
     * 类适配器
     *
     *
     * 对象适配器和类适配器的差异对适配器弹性的影响：
     *
     * 对象适配器因为使用组合，所以不仅可以适配某个类，也可以适配该类的
     * 任何子类，所以对象适配器更胜一筹。
     *
     * 类适配器却做不到这点，它只能采用某个特定的被适配者类，但是也有一
     * 个优点，就是不需要重新实现整个被适配者。必要的时候，它也可以覆盖
     * 被适配者的行为，因为它利用的继承的方式。
     *
     * 对象适配器因为使用组合，更加具有弹性一些，只需要写一些代码，将工
     * 作委托给被适配者。
     *
     * 类适配器更加有效率一些。因为使用它，仅仅需要一个类适配器就可以，
     * 而不需要一个适配器和一个被适配者。（即 被适配者可以省略）
     *
     *
     * 总的来说，更推荐对象适配器。
     */
    public static void main(String[] args) {

    }

}
