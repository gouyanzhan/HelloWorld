package com.siwuxie095.forme.algorithm.chapter3rd.question22th.answer1st;

/**
 * 通过先序和中序数组生成后序数组
 *
 * 题目：
 * 已知一棵二叉树所有的节点值都不同，给定这棵树正确的先序和中序数组，不要重建整棵树，
 * 而是通过这两个数组直接生成正确的后序数组。
 *
 * 解答：
 * 举例说明生成后序数组的过程，假设 preArr = [1,2,4,5,3,6,7]，inArr = [4,2,5,1,6,3,7]。
 * 1、根据 preArr 和 inArr 的长度，生成长度为 7 的后序数组 postArr，按以下规则从右到左填满
 * postArr。
 * 2、根据 [1,2,3,4,5,6,7] 和 [4,2,5,1,6,3,7] 设置 post[6] = 1，即 先序数组最左边的值。
 * 根据 1 把 inArr 划分成 [4,2,5] 和 [6,3,7]，pre 中 1 的右边部分根据这两部分等长划分出
 * [2,4,5] 和 [3,6,7]。然后 [2,4,5] 和 [4,2,5] 一组，[3,6,7] 和 [6,3,7] 一组。
 * 3、根据 [3,6,7] 和 [6,3,7]，设置 postArr[5] = 3，再次划分出 [6] 和 [6] 一组，[7] 和
 * [7] 一组。（分别来自两个数组）
 * 4、根据 [7] 和 [7] 设置 postArr[4] = 7。
 * 5、根据 [6] 和 [6] 设置 postArr[3] = 6。
 * 6、根据 [2,4,5] 和 [4,2,5]，设置 postArr[2] = 2，再次划分出 [4] 和 [4] 一组，[5] 和
 * [5] 一组。（分别来自两个数组）
 * 7、根据 [5] 和 [5] 设置 postArr[1] = 5。
 * 8、根据 [4] 和 [4] 设置 postArr[0] = 4。
 *
 * 如上过程简单总结为：根据当前的先序和中序数组，设置后序数组最右边的值，然后划分出左子树的先序、
 * 中序数组，以及右子树的先序、中序数组，先根据右子树的划分设置好后序数组，再根据左子树的划分，从
 * 右边到左边依次设置好后序数组的全部位置。
 *
 * @author Jiajing Li
 * @date 2019-03-31 13:34:26
 */
public class Main {

    public static void main(String[] args) {
        int[] preArr = new int[] {1, 2, 4, 5, 3, 6, 7};
        int[] inArr = new int[] {4, 2, 5, 1, 6, 3, 7};
        int[] postArr = Post.getPostArray(preArr, inArr);
        for (int post : postArr) {
            System.out.print(post + " ");
        }
    }

}
