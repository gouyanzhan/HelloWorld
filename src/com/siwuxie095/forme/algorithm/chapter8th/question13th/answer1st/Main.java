package com.siwuxie095.forme.algorithm.chapter8th.question13th.answer1st;

/**
 * 计算数组的小和
 *
 * 题目：
 * 数组小和的定义如下：
 * 例如，数组 s = [1,3,5,2,4,6]，在 s[0] 的左边小于或等于 s[0] 的数的和为 0，在 s[1] 的左边
 * 小于或等于 s[1] 的数的和为 1，在 s[2] 的左边小于或等于 s[2] 的数的和为 1+3=4，在 s[3] 的左
 * 边小于或等于 s[3] 的数的和为 1，在 s[4] 的左边小于或等于 s[4] 的数的和为 1+3+2=6，在 s[5]
 * 的左边小于或等于 s[5] 的数的和为 1+3+5+2+4=15，所以 s 的小和为 0+1+4+1+6+15=27。
 * 给定一个数组 s，实现函数返回 s 的小和。
 *
 * 解答：
 * 用时间复杂度为 O(N^2) 的方法比较简单，按照题目例子描述的求小和的方法求解即可，这里不再详述。下
 * 面介绍一种时间复杂度为 O(N*logN)、额外空间复杂度为 O(N) 的方法，这是一种在归并排序的过程中，
 * 利用组间在进行合并时产生小和的过程。
 * 1、假设左组为 l[]，右组为 r[]，左右两个组的组内都已经有序，现在要利用外排序合并成一个大组，并假
 * 设当前外排序是 l[i] 与 r[j] 在进行比较。
 * 2、如果 l[i] <= r[j]，那么产生小和。假设从 r[j] 往右一直到 r[] 结束，元素的个数为 m，那么产
 * 生的小和为 l[i]*m。
 * 3、如果 l[i]>r[j]，不产生任何小和。
 * 4、整个归并排序的过程该怎么进行就怎么进行，排序过程没有任何变化，只是利用步骤 1 ～ 步骤 3，也就
 * 是在组间合并的过程中累加所有产生的小和，总共的累加和就是结果。
 *
 * 在归并排序中，尤其是在组与组之间进行外排序合并的过程中，按照如上方式把小和一点一点地 "榨" 出来，
 * 最后收集到所有的小和。
 *
 * @author Jiajing Li
 * @date 2019-06-02 17:42:06
 */
public class Main {

    public static void main(String[] args) {
        int[] arr = {1, 3, 5, 2, 4, 6};
        System.out.println(Sum.getSmallSum(arr));
    }

}
